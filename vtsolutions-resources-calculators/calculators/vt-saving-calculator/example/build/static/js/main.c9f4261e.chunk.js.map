{"version":3,"sources":["Utils.js","language.js","components/tooltip.jsx","components/inputGourp.jsx","components/tableHeader.jsx","components/tableBody.jsx","components/table.jsx","App.js","serviceWorker.js","index.js"],"names":["moneyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","penniesFormatter","percentFormatter","Number","prototype","formatMoneyN","c","d","t","n","this","s","isNaN","Math","abs","undefined","i","parseInt","toFixed","j","length","substr","replace","slice","Util","percent","value","strNumber","toString","parseFloat","substring","money","amount","showPennies","arguments","withSymbol","format","test","digits","negative","multiplicator","pow","round","total","subtotal","floor","number","str","index","indexOf","translations","en","noteText","amountLabel","monthlyDepositLabel","interestLabel","compoundingLabel","NoOfYearsLabel","amountHelpText","monthlyDepositHelpText","interestRateHelpText","compoundingHelpText","NoOfYearsHelpText","savingsBreakdownText","interestEarnedtext","totalContributionsText","initialDepositText","totalSavingstext","yearText","yearPluralText","yearPluralTextCaipal","tableResultsTitle","yearlyDepositText","yearInterestText","totalDepositText","totalInterestText","depositPlusInterestText","balanceText","totalBalanceText","monthlyText","quarterlyText","semianuallyText","anuallyText","moneyFieldError","percentageFieldError","yearsError","loadingText","es","interestEarnedText","totalSavingsText","ca","fr","Tooltip","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hover","setState","react_default","a","createElement","className","onClick","handleTooltip","bind","onMouseOver","handleMouseInOut","onMouseOut","visibility","content","Component","InputGroup","_ref","id","label","name","placeholder","icon","iconPosition","isIntiger","tooltipContent","errorMsg","errorOccur","onChange","inputGroup","concat","react_number_format_es","thousandSeparator","allowNegative","onValueChange","values","singleField","htmlFor","tooltip","TableHeader","columns","map","column","key","TableBody","data","row","keys","columnKeyName","countDecimalPlaces","Table","tableHeader","tableBody","App","handleChange","properties","boxModel","objectSpread","handleSelectChange","e","target","tempCompound","JSON","parse","stringify","compound","forEach","item","selected","filter","renderResults","colors","_this$state","tableResults","lastRow","toConsumableArray","pop","Fragment","formatMoney","total_deposit","total_interest","balance","renderSentenceResults","_this$state2","lan","deposit","interest","years","title","languages","showResults","tableColumns","loading","preventDefault","compoun","interest_rate","yearly_deposit","returns","year_interest","aux_tableResults","year","push","roundTo","_this$state3","_this$props","btnLabel","onSubmit","handleSubmit","inputGourp","valueIsInteger","type","disabled","display","table","Boolean","window","location","hostname","match","VTSavingsCalculator","init","_ref$selector","selector","_ref$lan","_ref$btnLabel","calculator","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9f4261e.chunk.js","sourcesContent":["var moneyFormatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n});\r\n\r\nvar penniesFormatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    /* minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,*/\r\n});\r\n\r\nvar percentFormatter = new Intl.NumberFormat('en-US', {\r\n    style: 'percent',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 2,\r\n});\r\n\r\nNumber.prototype.formatMoneyN = function (c, d, t) { var n = this, c = isNaN(c = Math.abs(c)) ? 2 : c, d = d === undefined ? \".\" : d, t = t === undefined ? \",\" : t, s = n < 0 ? \"-\" : \"\", i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + \"\", j = (j = i.length) > 3 ? j % 3 : 0; return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\") };\r\n\r\nexport default class Util {\r\n    static percentToValue(percent) {\r\n        var value = percent;\r\n        var strNumber = value.toString();\r\n\r\n        if (isNaN(value) || value < 0) {\r\n            return '';\r\n        }\r\n        if(value >= 101){\r\n            return parseFloat( strNumber.substring(0, strNumber.length - 1) );\r\n        }\r\n        if(value < 101){\r\n            return strNumber.substring(0, 4);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    static moneyToValue(money) {\r\n        if (money === undefined) return '';\r\n        var value = parseInt(money.replace(/\\D/g, \"\"));\r\n        return !isNaN(value) ? value : '';\r\n    }\r\n\r\n    static moneyValue(amount, showPennies = false, withSymbol = true) {\r\n        if (amount === null || amount === '') return '';\r\n        var value = showPennies ? penniesFormatter.format(amount) : moneyFormatter.format(amount);\r\n        if (withSymbol === false) {\r\n            return value.substring(1);\r\n        }\r\n        return value;\r\n    }\r\n    static removeMoneyTrash(money){\r\n        return money.replace('$', '').replace(',', \"\");\r\n    }\r\n\r\n    static cleanNumberInput(value){\r\n        return /^-?\\d*[.,]?\\d*$/.test(value);\r\n    }\r\n\r\n    static valueIsInteger(value){\r\n        if(value === '-')\r\n            return true;\r\n        else\r\n            return /^\\d*$/.test(value) && !(/^0\\d+$/.test(value));\r\n    }\r\n\r\n    static formatMoney(value) {\r\n        return parseFloat(value.replace(/[^0-9.]/g, '')).formatMoneyN();\r\n    };\r\n\r\n    static roundTo(n, digits) {\r\n        var negative = false;\r\n        if (digits === undefined) {\r\n            digits = 0;\r\n        }\r\n            if( n < 0) {\r\n            negative = true;\r\n          n = n * -1;\r\n        }\r\n        var multiplicator = Math.pow(10, digits);\r\n        n = parseFloat((n * multiplicator).toFixed(11));\r\n        n = (Math.round(n) / multiplicator).toFixed(2);\r\n        if( negative ) {\r\n            n = (n * -1).toFixed(2);\r\n        }\r\n        return n;\r\n    }\r\n\r\n    static percentValue(amount, withSymbol) {\r\n        if (amount === null || amount === '') return '';\r\n        var value = percentFormatter.format(amount);\r\n        if (withSymbol === false) {\r\n            return value.substring(0, value.length - 1);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    static calculatePercent(total, subtotal){\r\n        let perc = '';\r\n        if(isNaN(total) || isNaN(subtotal)){\r\n            perc=' ';\r\n        }else{\r\n           perc = Math.floor( (subtotal/total) * 100 );\r\n        }\r\n\r\n        return perc;\r\n    }\r\n\r\n    static countDecimalPlaces(number) {\r\n        const str = \"\" + number;\r\n        const index = str.indexOf('.');\r\n        if (index >= 0) {\r\n            return str.length - index - 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n}","const translations = {\r\n    en : {\r\n        noteText: \"This calculator is designed to help you calculate yield and craft the best strategies for saving. Enter the information provided. If you're not sure about something, the help bubbles (?) to the left of each line provide more info.\",\r\n        amountLabel: 'Initial Amount',\r\n        monthlyDepositLabel: 'Monthly Deposit',\r\n        interestLabel: 'Interest Rate',\r\n        compoundingLabel: 'Compounding',\r\n        NoOfYearsLabel : 'No. of Years',\r\n        amountHelpText: \"Initial amount: For Initial deposit please enter the amount here. For some savings options like CDs, the initial deposit is the only contribution you'll make.\",\r\n        monthlyDepositHelpText: \"Monthly deposit: This represents the deposits you will make regularly on savings options like a traditional savings account or money market account (MMA).\",\r\n        interestRateHelpText: \"Interest rate: This is the rate at which your money will grow.\",\r\n        compoundingHelpText: \"Compounding: Shows how often the money generated by the growth of the account gets rolled into the total, so it's included in the next calculation of yield (i.e. you earn money on the interest (yield) already generated).\",\r\n        NoOfYearsHelpText : \"No. of Years: Some savings options grow for a set amount of time, or you can simply choose a length of time to see how fast the account will grow.\",\r\n        savingsBreakdownText: 'Total savings breakdown',\r\n        interestEarnedtext: 'Interest Earned',\r\n        totalContributionsText: 'Additional Contributions',\r\n        initialDepositText: 'Initial Deposit',\r\n        totalSavingstext: 'Your total savings',\r\n        yearText: 'year',\r\n        yearPluralText: 'years',\r\n        yearPluralTextCaipal: 'Years',\r\n        tableResultsTitle: 'Savings per year',\r\n        yearlyDepositText: 'Yearly deposit',\r\n        yearInterestText: 'Year interest',\r\n        totalDepositText: 'Total deposit',\r\n        //totalInterestText: 'Total interest',\r\n        totalInterestText: 'Year interest',\r\n        //depositPlusInterestText: 'Initial + Interest',\r\n        depositPlusInterestText: 'Total interest',\r\n        balanceText: 'Balance',\r\n        totalBalanceText: 'Total balance',\r\n        monthlyText: 'Monthly',\r\n        quarterlyText: 'Quarterly',\r\n        semianuallyText: 'Semianually',\r\n        anuallyText: 'Anually',\r\n        moneyFieldError: 'Use positive numbers less than 1 million.',\r\n        percentageFieldError: 'Use positive numbers less than 100.',\r\n        yearsError: 'Use real number of years. No dots allowed.',\r\n        loadingText: 'Loading...',\r\n    },\r\n    es : {\r\n        noteText: \"Esta calculadora esta diseñada para ayudarle a calcular el rendimiento y crear las mejores estrategias para ahorrar. Entre la información proporcionada. Si no está seguro de algo, las burbujas de ayuda (?) a la derecha de cada línea le proporcionan más información.\",\r\n        amountLabel: 'Monto inicial',\r\n        monthlyDepositLabel: 'Depósito mensual',\r\n        interestLabel: 'Tasa de interés',\r\n        compoundingLabel: 'Compuesto',\r\n        NoOfYearsLabel : 'No. de Años',\r\n        amountHelpText: \"Cantidad inicial: Su planea hacer un depósito inicial, entre la cantidad aquí. Para algunas opciones de ahorro como CDs, el depósito inicial es la una contribución que usted hará.\",\r\n        monthlyDepositHelpText: \"Deposito mensual: Esto representa los depósitos que usted hará regularmente en las opciones de ahorro como una cuenta de ahorros tradicional o cuenta de mercadeo de dinero (MMA).\",\r\n        interestRateHelpText: \"Tasa de interés: esta es la tasa en la cual su dinero va a crecer.\",\r\n        compoundingHelpText: \"Compuesto: Muestra la frecuencia con la que el dinero se genera por el crecimiento de la cuenta y como se acumula en el total, el interés ganado se incluye para el próximo cálculo del rendimiento (ejemplo, usted gana dinero sobre el interés (rendimiento) ya generado).\",\r\n        NoOfYearsHelpText : \"No. de Años: Algunas opciones de ahorro crecen para una cantidad fija de tiempo, o usted puede elegir la duración de tiempo para ver que tan rápido la cuenta puede crecer.\",\r\n        savingsBreakdownText: 'Desglose del ahorro total',\r\n        interestEarnedText: 'Intereses Ganados',\r\n        totalContributionsText: 'Contribuciones Adicionales',\r\n        initialDepositText: 'Depósito Inicial',\r\n        totalSavingsText: 'Sus ahorros totales',\r\n        yearText: 'año',\r\n        yearPluralText: 'años',\r\n        yearPluralTextCaipal: 'Años',\r\n        tableResultsTitle: 'Desgloce de ahorros por año',\r\n        yearlyDepositText: 'Depósito anual',\r\n        yearInterestText: 'Interés anual',\r\n        totalDepositText: 'Depósito total',\r\n        totalInterestText: 'Interés total',\r\n        depositPlusInterestText: 'Depósito + Interés',\r\n        balanceText: 'Balance',\r\n        totalBalanceText: 'Balance Total',\r\n        monthlyText: 'Mensual',\r\n        quarterlyText: 'Trimestral',\r\n        semianuallyText: 'Semi anual',\r\n        anuallyText: 'Anualmente',\r\n        moneyFieldError: 'Inserte un número mayor que 0 y menor que 1 millón.',\r\n        percentageFieldError: 'Inserte un número mayor que 0 y menor que 100.',\r\n        yearsError: 'Número de años reales que estará ahorrando.',\r\n        loadingText: 'Cargando...',\r\n    },\r\n    ca : {\r\n        noteText: \"This calculator is designed to help you calculate yield and craft the best strategies for saving. Enter the information provided. If you're not sure about something, the help bubbles (?) to the left of each line provide more info.\",\r\n        amountLabel: 'Initial Amount',\r\n        monthlyDepositLabel: 'Monthly Deposit',\r\n        interestLabel: 'Interest Rate',\r\n        compoundingLabel: 'Compounding',\r\n        NoOfYearsLabel : 'No. of Years',\r\n        amountHelpText: \"Initial amount: For Initial deposit please enter the amount here. For some savings options like CDs, the initial deposit is the only contribution you'll make.\",\r\n        monthlyDepositHelpText: \"Monthly deposit: This represents the deposits you will make regularly on savings options like a traditional savings account or money market account (MMA).\",\r\n        interestRateHelpText: \"Interest rate: This is the rate at which your money will grow.\",\r\n        compoundingHelpText: \"Compounding: Shows how often the money generated by the growth of the account gets rolled into the total, so it's included in the next calculation of yield (i.e. you earn money on the interest (yield) already generated).\",\r\n        NoOfYearsHelpText : \"No. of Years: Some savings options grow for a set amount of time, or you can simply choose a length of time to see how fast the account will grow.\",\r\n        savingsBreakdownText: 'Total savings breakdown',\r\n        interestEarnedtext: 'Interest Earned',\r\n        totalContributionsText: 'Additional Contributions',\r\n        initialDepositText: 'Initial Deposit',\r\n        totalSavingstext: 'Your total savings',\r\n        yearText: 'year',\r\n        yearPluralText: 'years',\r\n        yearPluralTextCaipal: 'Years',\r\n        tableResultsTitle: 'Savings per year',\r\n        yearlyDepositText: 'Yearly deposit',\r\n        yearInterestText: 'Year interest',\r\n        totalDepositText: 'Total deposit',\r\n        totalInterestText: 'Total Interest',\r\n        depositPlusInterestText: 'Initial + Interest',\r\n        balanceText: 'Balance',\r\n        totalBalanceText: 'Total Balance',\r\n        monthlyText: 'Monthly',\r\n        quarterlyText: 'Quarterly',\r\n        semianuallyText: 'Semianually',\r\n        anuallyText: 'Anually',\r\n        moneyFieldError: 'Use positive numbers less than 1 million.',\r\n        percentageFieldError: 'Use positive numbers less tha 100.',\r\n        yearsError: 'Use real number of years.',\r\n        loadingText: 'Loading...',\r\n    },\r\n    fr : {\r\n        noteText: \"Cette calculatrice est conçue pour vous aider à calculer le rendement et à élaborer les meilleures stratégies d’épargne. Saisissez les renseignements fournis. Si vous n’êtes pas sûr de quelque chose, les bulles d’aide (?) à gauche de chaque ligne fournissent plus de renseignements.\",\r\n        amountLabel: 'Montant initial',\r\n        monthlyDepositLabel: 'Dépôt mensuel',\r\n        interestLabel: 'Taux d’intérêt',\r\n        compoundingLabel: 'Composé',\r\n        NoOfYearsLabel : 'Nombre d’années',\r\n        amountHelpText: \"Montant initial : Pour le dépôt initial, veuillez saisir le montant ici. Pour certaines options d’épargne comme les CD (certificat de dépôt), le dépôt initial est la seule contribution que vous ferez.\",\r\n        monthlyDepositHelpText: \"Dépôt mensuel : Il s’agit des dépôts que vous effectuerez régulièrement sur des options d’épargne comme un compte d’épargne traditionnel ou un compte du marché monétaire.\",\r\n        interestRateHelpText: \"Le taux d’intérêt : Il s’agit du taux auquel votre argent va croître.\",\r\n        compoundingHelpText: \"Capitalisation : Indique la fréquence à laquelle l’argent généré par la croissance du compte est intégré au total, afin d’être inclus dans le prochain calcul du rendement (c’est-à-dire que vous accumulez de l’argent sur les intérêts [rendement] déjà générés).\",\r\n        NoOfYearsHelpText : \"Nombre d’années : Certaines options d’épargne croissent pendant une durée déterminée, ou vous pouvez simplement choisir une durée pour voir à quelle vitesse le compte va croître.\",\r\n        savingsBreakdownText: 'Répartition de l’épargne totale',\r\n        interestEarnedtext: 'Intérêts accumulés',\r\n        totalContributionsText: 'Cotisations supplémentaires',\r\n        initialDepositText: 'Dépôt initial',\r\n        totalSavingstext: 'Votre épargne totale',\r\n        yearText: 'année',\r\n        yearPluralText: 'années',\r\n        yearPluralTextCaipal: 'Années',\r\n        tableResultsTitle: 'Épargne par an',\r\n        yearlyDepositText: 'Dépôt annuel',\r\n        yearInterestText: 'Intérêt annuel',\r\n        totalDepositText: 'Dépôt total',\r\n        totalInterestText: 'Intérêt total',\r\n        depositPlusInterestText: 'Initial + intérêts',\r\n        balanceText: 'Solde',\r\n        totalBalanceText: 'Solde total',\r\n        monthlyText: 'Mensuel',\r\n        quarterlyText: 'Trimestriel',\r\n        semianuallyText: 'Semestriel',\r\n        anuallyText: 'Annuel',\r\n        moneyFieldError: 'Utilisez des chiffres positifs inférieurs à 1 million.',\r\n        percentageFieldError: 'Utilisez des chiffres positifs inférieurs à 100.',\r\n        yearsError: 'Utilisez un nombre réel d’années.',\r\n        loadingText: 'Chargement...',\r\n    },\r\n\r\n};\r\n\r\nexport default function getTranslations(lan) {\r\n    return translations[lan];\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Tooltip extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { hover: false }\r\n    }\r\n\r\n    handleMouseInOut() {\r\n        this.setState({ hover: !this.state.hover })\r\n    }\r\n\r\n    handleTooltip() {\r\n        this.setState({ hover: !this.state.hover })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"tooltipContainer\">\r\n                <div\r\n                    className='helpMiniDisk'\r\n                    onClick={this.handleTooltip.bind(this)}\r\n                    onMouseOver={this.handleMouseInOut.bind(this)}\r\n                    onMouseOut={this.handleMouseInOut.bind(this)}\r\n                >?</div>\r\n                <div className=\"customTooltip\" style={{visibility: this.state.hover ? 'visible' : 'hidden' }}>{this.props.content}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tooltip;","import React from 'react';\r\n//import Util from \"../Utils\";\r\nimport Tooltip from './tooltip.jsx';\r\nimport NumberFormat from 'react-number-format';\r\nimport '../styles/inputGroup.css';\r\n\r\nconst InputGroup = ({id, label, name, value, placeholder, icon, isIntiger, iconPosition, tooltipContent, errorMsg, errorOccur, onChange}) => {\r\n\r\n    let inputGroup = (\r\n        <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className={`input-group-text ${errorOccur ? 'inputIconError' : '' }`}>{icon}</span>\r\n            </div>\r\n\r\n            <NumberFormat\r\n                id={id}\r\n                name={name}\r\n                value={value}\r\n                className={`form-control ${errorOccur ? 'inputError' : '' }`}\r\n                placeholder={placeholder}\r\n                thousandSeparator={true}\r\n                allowNegative={false}\r\n                onValueChange={ (values) => {\r\n                    //values is an object that contains:\r\n                    // formattedValue = $2,223\r\n                    // value ie, 2223\r\n                    const {value} = values;\r\n\r\n                    onChange({name: name, value: value});\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n\r\n    if(iconPosition === 'right'){\r\n        inputGroup = (\r\n            <div className=\"input-group\">\r\n                <NumberFormat\r\n                    id={id}\r\n                    name={name}\r\n                    value={value}\r\n                    className={`form-control ${errorOccur ? 'inputError' : '' }`}\r\n                    placeholder={placeholder}\r\n                    thousandSeparator={true}\r\n                    allowNegative={false}\r\n                    onValueChange={ (values) => {\r\n                        const {value} = values;\r\n                        onChange({name: name, value: value});\r\n                    }}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                    <span className={`input-group-text ${errorOccur ? 'inputIconError' : '' }`}>{icon}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let singleField = (\r\n        <NumberFormat\r\n            id={id}\r\n            name={name}\r\n            value={value}\r\n            className={`form-control ${errorOccur ? 'inputError' : '' }`}\r\n            placeholder={placeholder}\r\n            thousandSeparator={false}\r\n            allowNegative={false}\r\n            onValueChange={ (values) => {\r\n                const {value} = values;\r\n                onChange({name: name, value: value});\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className=\"row form-group\">\r\n            <label htmlFor={id} className=\"col-sm-5 col-xl-4 col-form-label\">\r\n                <Tooltip content={tooltipContent} /> {label}\r\n            </label>\r\n\r\n            <div className=\"col-sm-7 col-xl-8\">\r\n                { icon ? inputGroup : singleField}\r\n                <span className={`inputErrorText ${errorOccur ? 'show' : 'hide' }`}>{errorMsg}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default InputGroup;","import React from \"react\";\r\n\r\nconst TableHeader = ({columns}) => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        { columns.map(column => <th key={column}>{column}</th>) }\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport Util from '../Utils'\r\n\r\nconst TableBody = ({data}) => {\r\n    return (\r\n      <tbody>\r\n        {data.map((row, index)  => (\r\n          <tr key={index+'_row'}>\r\n            { Object.keys(row).map((columnKeyName, i) => (\r\n              <td key={index+'_'+i+'cell'}>\r\n                { row[columnKeyName] }\r\n                { i > 0 && Util.countDecimalPlaces(row[columnKeyName]) === 1 && '0' }\r\n              </td>\r\n            )) }\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader.jsx\";\r\nimport TableBody from \"./tableBody.jsx\";\r\n\r\nconst Table = ({ columns, data }) => {\r\n  return (\r\n    <table className=\"table table-bordered table-hover\">\r\n      <TableHeader columns={columns}/>\r\n      <TableBody data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\nimport Util from \"./Utils\";\r\nimport getTranslations from './language';\r\nimport InputGroup from './components/inputGourp';\r\nimport Table from './components/table.jsx'\r\nimport Tooltip from './components/tooltip.jsx'\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const languages = getTranslations(props.lan);\r\n        this.state = {\r\n            lan : props.lan,\r\n            translations : languages,\r\n\r\n            amount: '-',\r\n            deposit: '0',\r\n            interest: 0,\r\n            years: '-',\r\n            compound: [\r\n                {\r\n                    id: 0,\r\n                    title: languages.monthlyText,\r\n                    value: 12,\r\n                    selected: true\r\n                },\r\n                {\r\n                    id: 1,\r\n                    title: languages.quarterlyText,\r\n                    value: 4,\r\n                    selected: false\r\n                },\r\n                {\r\n                    id: 2,\r\n                    title: languages.semianuallyText,\r\n                    value: 2,\r\n                    selected: false\r\n                },\r\n                {\r\n                    id: 3,\r\n                    title: languages.anuallyText,\r\n                    value: 1,\r\n                    selected: false\r\n                }\r\n            ],\r\n            showResults : false,\r\n            tableColumns : [\r\n                languages.yearPluralTextCaipal,\r\n                languages.yearlyDepositText,\r\n                languages.totalInterestText,\r\n                languages.totalDepositText,\r\n                languages.depositPlusInterestText,\r\n                languages.totalBalanceText,\r\n            ],\r\n            tableResults : [],\r\n            loading: false,\r\n        };\r\n\r\n    }//End of Constructor\r\n\r\n\r\n    handleChange = (properties) => {\r\n        let boxModel = {...this.state};\r\n        boxModel[properties.name] = properties.value;\r\n\r\n        this.setState(boxModel);\r\n    }\r\n\r\n    handleSelectChange = e => {\r\n        const {value} = e.target;\r\n\r\n        //Updating List of Percentages\r\n        let tempCompound = JSON.parse(JSON.stringify(this.state.compound));\r\n        tempCompound.forEach(item => (item.selected = false));\r\n        tempCompound.filter(item => item.value === Number(value))[0].selected = true;\r\n\r\n        this.setState({ compound: tempCompound });\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const amount   = Number(this.state.amount);\r\n        const deposit  = this.state.deposit === '' ? 0 : Number(this.state.deposit);\r\n        const interest = Number(this.state.interest);\r\n        const compoun  = Number(this.state.compound.filter(item=>item.selected)[0].value);\r\n        const years    = Number(this.state.years);\r\n\r\n        let balance = amount;\r\n        let interest_rate = 0;\r\n        let yearly_deposit = 0;\r\n        //let result = 0;\r\n        let returns = 0;\r\n        let year_interest = 0;\r\n        let total_deposit = 0;\r\n        let total_interest = 0;\r\n        //let aux_balance = 0;\r\n        let aux_tableResults = [];\r\n        for (let year = 1; year <= years; year++) {\r\n            // Doing Math\r\n/*             aux_balance = 0;\r\n            yearly_deposit = deposit * 12;\r\n            interest_rate = Math.pow(1 + ((interest / 100) / compoun), compoun * year );\r\n            //interest_rate = Math.pow(1 + (interest / 100) / compoun, compoun );\r\n\r\n            result = parseFloat(balance) * parseFloat(interest_rate);\r\n            total_interest = result - balance;\r\n            total_deposit += parseFloat(yearly_deposit);\r\n            aux_balance = parseFloat(result) + parseFloat(total_deposit); */\r\n\r\n            yearly_deposit = parseFloat(deposit) * 12;\r\n            balance += parseFloat(yearly_deposit);\r\n            interest_rate = Math.pow(1 + (interest / 100) / compoun, compoun);\r\n            returns = parseFloat(balance) * parseFloat(interest_rate);\r\n            year_interest  = parseFloat(returns - balance);\r\n            total_deposit += parseFloat(yearly_deposit);\r\n            total_interest += parseFloat(year_interest);\r\n            balance += parseFloat(year_interest);\r\n\r\n            /* aux_tableResults.push({\r\n                year: year,\r\n                yearly_deposit: '$' + Util.formatMoney( Util.roundTo(yearly_deposit, 2) ),\r\n                year_interest: '$' + Util.formatMoney( Util.roundTo(total_interest, 2) ),\r\n                total_deposit: '$' + Util.formatMoney( Util.roundTo(total_deposit, 2) ),\r\n                total_interest: '$' + Util.formatMoney( Util.roundTo(result, 2) ),\r\n                balance: '$' + Util.formatMoney( Util.roundTo(aux_balance, 2) ),\r\n            }); */\r\n\r\n            aux_tableResults.push({\r\n                year: year,\r\n                yearly_deposit: '$' + Util.formatMoney( Util.roundTo(yearly_deposit, 2) ),\r\n                year_interest: '$' + Util.formatMoney( Util.roundTo(year_interest, 2) ),\r\n                total_deposit: '$' + Util.formatMoney( Util.roundTo(total_deposit, 2) ),\r\n                total_interest: '$' + Util.formatMoney( Util.roundTo(total_interest, 2) ),\r\n                balance: '$' + Util.formatMoney( Util.roundTo(balance, 2) ),\r\n            });\r\n\r\n        }\r\n\r\n        this.setState({\r\n            showResults: true,\r\n            tableResults: aux_tableResults,\r\n            loading : false\r\n        });\r\n\r\n    }\r\n\r\n    renderResults = colors => {\r\n        const {amount, tableResults, translations} = this.state;\r\n        const auxResults = [...tableResults];\r\n        const lastRow = auxResults.pop();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h2>{translations.savingsBreakdownText}:</h2>\r\n                <table className=\"table text-right ssavings-right-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"savings-result-value\">{translations.initialDepositText}</div>\r\n                            </td>\r\n                            <td>\r\n                                <div className=\"savingsR3\">\r\n                                    + ${Util.formatMoney(amount)} {Util.countDecimalPlaces(amount) === 1 && '0'}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"savings-result-value\">{translations.totalContributionsText}</div>\r\n                            </td>\r\n                            <td>\r\n                                <div className=\"savings-result-value savingsR2\">+ {lastRow.total_deposit}</div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"savings-result-value\">{translations.interestEarnedtext}</div>\r\n                            </td>\r\n                            <td>\r\n                                <div className=\"savings-result-value savingsR1\">+ {lastRow.total_interest}</div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className=\"text-right pr-3\">\r\n                    <span>{translations.totalSavingstext}</span>\r\n                    <span className=\"savings-general-result\">{lastRow.balance}</span>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderSentenceResults = () => {\r\n        const {lan, amount, deposit, interest, compound, years, tableResults} = this.state;\r\n        const auxResults = [...tableResults];\r\n        const lastRow = auxResults.pop();\r\n\r\n        if(lan === 'en' || lan === 'ca'){\r\n            return (<p className=\"inWordsResults\">\r\n                {/* <strong>Summary:</strong> With an initial deposit of <i>{'$'+Util.formatMoney(amount)}</i> and a monthly deposit of <i>{'$' + Util.formatMoney(deposit)}</i> you will be paying <i>{interest + '%'}</i> annual interest compounded <i>{compound.filter(item=>item.selected)[0].title}</i> for <i>{years} {years>1 ? 'years' : 'year'}</i> , you will be saving a total of <i>{lastRow.balance}</i> */}\r\n                <strong>Summary:</strong> If you save <i>{'$' + Util.formatMoney(deposit)}</i> every month with an initial deposit of <i>{'$'+Util.formatMoney(amount)}</i> and <i>{interest + '%'}</i> as APR from the bank compounded <i>{compound.filter(item=>item.selected)[0].title}</i>, in <i>{years} {years>1 ? 'years' : 'year'}</i> you would be saving a total of <i>{lastRow.balance}</i>.\r\n            </p>);\r\n        }else if(lan==='fr'){\r\n            return (<p className=\"inWordsResults\">\r\n                <strong>Résumé:</strong> Si vous épargnez <i>{'$' + Util.formatMoney(deposit)}</i> chaque mois avec un dépôt initial de [ <i>{'$'+Util.formatMoney(amount)}</i> et <i>{interest + '%'}</i> comme TAEG (Taux annuel effectif global) de la banque composé <i>{compound.filter(item=>item.selected)[0].title}</i>, en <i>{years} {years>1 ? 'années' : 'année'}</i>, vous épargnerez un total de <i>{lastRow.balance}</i>.\r\n            </p>);\r\n        }else{\r\n            return (<p className=\"inWordsResults\">\r\n                <strong>Resumen:</strong> Si deposita <i>{'$' + amount}</i> y luego <i>{'$' + Util.formatMoney(deposit)}</i> mensualmente en una cuenta que paga un interés anual del {interest + '%'} compuesto <i>{compound.filter(item=>item.selected)[0].title}</i> durante <i>{years} {years>1 ? 'años' : 'año'}</i>, ahorrará un total de <i>{lastRow.balance}</i>\r\n            </p>);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {amount, deposit, interest, years, compound, translations} = this.state;\r\n        const {title, btnLabel, colors} = this.props;\r\n        return (\r\n            <div className=\"container ssavings-calculator-wrapper\">\r\n\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-sm-12 col-lg-7\">\r\n                        <h2 className=\"mb-0\">{title}</h2>\r\n\r\n                        <form id=\"simple-savings-calculator\" onSubmit={this.handleSubmit.bind(this)} >\r\n\r\n                            <InputGroup\r\n                                id='ssc_amount'\r\n                                label={translations.amountLabel}\r\n                                name='amount'\r\n                                icon='$'\r\n                                iconPosition='left'\r\n                                tooltipContent={translations.amountHelpText}\r\n                                errorOccur={(Number(amount) < 1 || Number(amount) > 1000000 || amount === '') ? 1 : 0}\r\n                                errorMsg={translations.moneyFieldError}\r\n                                onChange={this.handleChange}\r\n                            />\r\n\r\n                            <InputGroup\r\n                                id='ssc_deposit'\r\n                                label={translations.monthlyDepositLabel}\r\n                                name='deposit'\r\n                                icon='$'\r\n                                iconPosition='left'\r\n                                tooltipContent={translations.monthlyDepositHelpText}\r\n                                errorOccur={( (Number(deposit) < 1 && Number(deposit) !== 0) || Number(deposit) > 1000000 ) ? 1 : 0}\r\n                                errorMsg={translations.moneyFieldError}\r\n                                onChange={this.handleChange}\r\n                            />\r\n\r\n                            <InputGroup\r\n                                id='ssc_interest'\r\n                                label={translations.interestLabel}\r\n                                name='interest'\r\n                                icon='%'\r\n                                iconPosition='right'\r\n                                tooltipContent={translations.interestRateHelpText}\r\n                                errorOccur={(Number(interest) < 0 || Number(interest) > 100 || interest === '') ? 1 : 0}\r\n                                errorMsg={translations.percentageFieldError}\r\n                                onChange={this.handleChange}\r\n                            />\r\n\r\n                            <div className=\"row form-group\">\r\n                                <label htmlFor='ssc_compounding' className=\"col-sm-5 col-xl-4 col-form-label\">\r\n                                    <Tooltip content={translations.compoundingHelpText} /> {translations.compoundingLabel}\r\n                                </label>\r\n\r\n                                <div className=\"col-sm-7 col-xl-8\">\r\n                                    <select\r\n                                        id='ssc_compounding'\r\n                                        name='compounding'\r\n                                        value={compound.filter(item => item.selected)[0].value}\r\n                                        className='form-control'\r\n                                        onChange={this.handleSelectChange.bind(this)}\r\n                                    >\r\n                                        { compound.map( item => <option key={item.id} value={item.value} >{item.title}</option>) }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <InputGroup\r\n                                id='ssc_years'\r\n                                label={translations.NoOfYearsLabel}\r\n                                name='years'\r\n                                icon={false}\r\n                                tooltipContent={translations.NoOfYearsHelpText}\r\n                                errorOccur={ (!Util.valueIsInteger(years) || Number(years) < 0 || Number(years) > 100 || years === '' ) ? 1 : 0}\r\n                                errorMsg={translations.yearsError}\r\n                                onChange={this.handleChange}\r\n                            />\r\n\r\n                            <div className=\"mt-3 mb-3\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-secondary btn-block\"\r\n                                    disabled={ Number(amount)    < 1 || Number(amount)   > 1000000 || amount === ''   || amount === '-'  ||\r\n                                             ( Number(deposit)   < 1 && Number(deposit) !== 0 )    || Number(deposit)  > 1000000 ||\r\n                                               Number(interest) <= 0 || Number(interest) > 100     || interest === '' || Number(years) <= 0 ||\r\n                                               Number(years)   > 100 || years === '' || years === '-' || !Util.valueIsInteger(years) }\r\n                                >\r\n                                    { btnLabel }\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div id=\"ssavingsResults\" className=\"col-sm-12 col-md-8 col-lg-5 text-right rightResults\" style={{display: this.state.loading || this.state.showResults ? 'block' : 'none' }} >\r\n                        {this.state.showResults && this.renderResults(colors)}\r\n                    </div>\r\n                </div>{/* End of row */}\r\n\r\n                <div className=\"row\" style={{display: this.state.showResults ? 'block' : 'none' }} >\r\n                    <div className=\"col\">{this.state.showResults && this.renderSentenceResults()}</div>\r\n\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                        <div id=\"paymentResults\">\r\n                            <h3>{this.state.translations.tableResultsTitle}</h3>\r\n                            <div className=\"table-responsive scrolling-table underlined-tbody\">\r\n                                <Table columns={this.state.tableColumns} data={this.state.tableResults} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }//End of render\r\n\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie9';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n(function(window){\r\n    const _init = ({\r\n        selector     = 'vtSavingsCalc',\r\n        lan          = 'en',\r\n        btnLabel     ='Calculate'\r\n    })=>{\r\n        let calculator = (<App lan={lan} btnLabel={btnLabel} />);\r\n        ReactDOM.render( calculator, document.getElementById(selector) );\r\n    }\r\n\r\n    window.VTSavingsCalculator = { init: _init }\r\n})(window);\r\n//ReactDOM.render(<App lan='en' btnLabel='Calculate' />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}