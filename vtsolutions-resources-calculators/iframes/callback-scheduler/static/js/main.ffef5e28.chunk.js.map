{"version":3,"sources":["data/WidgetData.js","utils/helpers.js","components/select.jsx","App.js","serviceWorker.js","index.js"],"names":["formData","label","EN","name","lastname","phone","email","state","timezone","calendar","tcpa","thankyoutitle","thankyoumesage","thankyoumesage2","ES","inputsError","cta","btnTitle","workingDaysOfWeek","Helpers","newName","String","replace","results","RegExp","exec","window","location","search","decodeURIComponent","lap","start","end","lastM","x","times","tt","ap","i","hh","Math","floor","mm","seconds","slice","lastD","currDate","Date","workingDays","dd","getDate","getMonth","yyyy","getFullYear","vDate","setDate","weekHours","step","result","sun","mon","tue","wed","thu","fri","sat","Object","entries","key","value","hours","console","log","map","item","auxTimes","split","startAux","Number","endAux","getWorkingHorus","concat","apply","strTimeZone","offset","this","isDST","d","utc","getTime","getTimezoneOffset","justTimeStrArray","toLocaleString","section","justTimeArray","timeStr","hourArr","hour","parseInt","dateStr","separation","strDate","URLSearchParams","get","toString","match","jan","jul","max","selectedTimeZone","convertHourTo24Format","isDayLight","dif","hourResult","Dropdown","props","listOpen","selected","close","bind","setTimeout","addEventListener","removeEventListener","timeOut","setState","id","onSelect","prevState","headerTitle","list","filter","title","className","onClick","toggleList","Provider","e","stopPropagation","selectItem","Component","CallBackContainer","styled","div","styles","formBackgroundColor","fieldsBorderColor","bordered","fontColor","calendarColorON","btnCTAFontColor","btnCTANormalColor","btnCTAHoveredColor","CallbackCalendarWrapper","arrowColor","CallBackCalendar","calendarColorLines","calendarColorOFF","calendarColorHOVER","calendarColorACTIVE","App","handleCalendarClick","day","hourTitle","hourID","calendarAvailability","auxAvailability","flag","length","ID","j","status","selectedDate","handleSelectState","previousState","usaStates","assign","handleTimeZoneSelect","usaTimeZones","fillingOutStateAvailability","handleChange","target","test","toLowerCase","handleFormSubmit","pageUrl","pidinfo","drops_campaign_id","firstname","request_time","hourDif","getDiference","estDate","axios","post","referrer_url","last_name","mapi_lead_id","pid","CakeID","time_zone","headers","Authorization","then","res","formSent","handleCheckboxCchange","evt","checked","getTimeZoneLabel","lang","region","getUrlParameter","pageDomain","ip_address","token","source","company","workHours","workDays","getWorkingDays","daysOff","JSON","parse","timeOff","decodeProvidedHours","selectedState","getTimeZoneStringValue","nameError","lastnameError","phoneError","emailError","timeout","isTimedOut","twocolumn","idleTimer","onAction","onActive","onIdle","cTz","auxItem","reset","auxAvailabilityArray","currentDate","getCurrentDate","currentTime","getCurrentHour","chour","isOff","includes","hourData","workDayDate","changeDateFormat","dayHours","getDay","states","useStates","push","abbreviation","Container","style","display","Row","Col","xs","sm","md","Form","Group","controlId","Label","Control","type","onChange","Text","ref","element","document","debounce","itemWidth","slidesPerPage","addArrowClickHandler","arrowLeft","arrowRight","hTitle","disabled","Check","textAlign","Button","variant","padding","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ffef5e28.chunk.js","sourcesContent":["// commom DATA\n// Credibility Logos\nconst credibilityLogos = {\n    EN: {\n        bbb: 'https://www.bbb.org/us/fl/plantation/profile/credit-services/debtcom-llc-0633-90080459',\n        goDaddy: 'https://seal.godaddy.com/verifySeal?sealID=VttdGalb6RNnHGweH1ZPwYmmYt3XSbYeXM2Jk90v88Poa2JxPmkvASdRAOnA',\n        trustPilot: 'https://www.debt.com/reviews/',\n    },\n    ES: {\n        bbb: 'https://www.bbb.org/us/fl/plantation/profile/credit-services/debtcom-llc-0633-90080459',\n        goDaddy: 'https://seal.godaddy.com/verifySeal?sealID=VttdGalb6RNnHGweH1ZPwYmmYt3XSbYeXM2Jk90v88Poa2JxPmkvASdRAOnA',\n        trustPilot: 'https://www.debt.com/es/resenas/',\n    },\n};\n\n// CallUs section\nconst callUsData = {\n    EN: {\n        text: 'Or call: ',\n    },\n    ES: {\n        text: 'Llámenos al: ',\n    },\n};\n\n// Personal Form\nconst formData = {\n    label: {\n        EN: {\n            name: 'First Name',\n            lastname: 'Last Name',\n            phone: 'Phone Number',\n            email: 'Email Address',\n            state: 'State',\n            timezone: 'Time Zone',\n            calendar: 'Date and Time',\n            tcpa: '*Telephone Consumer Protection Ad (TCPA) copy here.',\n            thankyoutitle: 'Thank you ',\n            thankyoumesage: 'A Certified Credit Counselor will be calling you at',\n            thankyoumesage2: 'They’ll complete your free debt and budget analysis, then discuss the best options for getting out of debt with you. If you qualify to enroll in a debt management program, your counselor can also help you enroll immediately.',\n        },\n        ES: {\n            name: 'Nombre',\n            lastname: 'Apellido',\n            phone: 'Número Telefónico',\n            email: 'Correo Electrónico',\n            state: 'Estado',\n            timezone: 'Zona Horaria',\n            calendar: 'Fecha y Hora',\n            tcpa: '*Telephone Consumer Protection Ad (TCPA) copy here.',\n            thankyoutitle: 'Gracias ',\n            thankyoumesage: 'Un asesor de crédito certificado lo llamará al',\n            thankyoumesage2: 'Ellos completarán su análisis gratuito de deuda y presupuesto, luego discutirán con usted las mejores opciones para salir de la deuda. Si califica para inscribirse en un programa de gestión de deudas, su consejero también puede ayudarlo a inscribirse de inmediato.',\n        },\n    },\n    inputsError: {\n        EN: {\n            name: 'The First Name field must be letters only.',\n            lastname: 'The Last Name field must be letters only.',\n            phone: 'Invalid Phone number.',\n            email: 'Invalid Email address.',\n            state: 'The State is required.',\n            calendar: 'The Calendar is required.',\n            tcpa: 'This field is required.',\n        },\n        ES: {\n            name: 'Su Nombre debe contener solo letras.',\n            lastname: 'Sus Apellidos deben contener solo letras',\n            phone: 'El número de teléfono es inválido.',\n            email: 'El correo electrónico es inválido.',\n            state: 'El campo Estado es requerido.',\n            calendar: 'Es requerido seleccionar al menos una fecha.',\n            tcpa: 'Este campo es requerido.',\n        },\n    },\n    cta: {\n        EN: {\n            btnTitle: 'BOOK NOW',\n        },\n        ES: {\n            btnTitle: 'RESERVAR',\n        },\n    },\n};\n\n// Name of working days of week\nconst workingDaysOfWeek = {\n    EN: ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'],\n    ES: ['dom', 'lun', 'mar', 'mie', 'jue', 'vie', 'sab'],\n};\n\nexport { credibilityLogos, callUsData, formData, workingDaysOfWeek };\n","export default class Helpers {\n    // Parsing URL params\n    static getUrlParameter(name) {\n        const newName = String(name).replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n        const regex = new RegExp(`[\\\\?&]${newName}=([^&#]*)`);\n        const results = regex.exec(window.location.search);\n\n        return results === null ? false : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n    }\n\n    // Generates array of times (as strings) for every X minutes\n    static getWorkingHorus(lap, start, end, lastM = false) {\n        const x = lap; // minutes interval\n        const times = []; // time array\n\n        let tt = start * 60; // start time\n        const ap = [' AM', ' PM']; // AM-PM\n\n        if (lastM) {\n            end = (end * 60) + (lap * 2);\n        } else {\n            end = (end * 60) + lap;\n        }\n\n        // loop to increment the time and push results in array\n        for (let i = 0; tt < end; i += 1) {\n            const hh = Math.floor(tt / 60); // getting hours of day in 0-24 format\n            const mm = tt % 60; // getting minutes of the hour in 0-55 format\n\n            const seconds = `0${mm}`.slice(-2);\n            times[i] = (\"\" + ((hh===12)?12:hh%12)).slice(-2) + ':' + seconds + ap[Math.floor(hh/12)]; // pushing data in array in [00:00 - 12:00 AM/PM format]\n\n            tt += x;\n        }\n\n        return times;\n    }\n\n    // Returns an array with working days from today date up to lastD day\n    static getWorkingDays(lastD = 15) {\n        const currDate = new Date();\n        const workingDays = [];\n\n        for (let i = 0; i < lastD; i += 1) {\n            let dd = currDate.getDate();\n            let mm = currDate.getMonth() + 1;\n            const yyyy = currDate.getFullYear();\n\n            if (dd < 10) {\n                dd = '0'+dd;\n            }\n            if (mm < 10) {\n                mm = '0'+mm;\n            }\n\n            const vDate = mm+'-'+dd+'-'+yyyy;\n            // let nextDay = new Date(vDate);\n            // if( nextDay.getDay() !== 0 && nextDay.getDay() !== 6 ){\n            workingDays[i] = vDate;\n            // }\n\n            currDate.setDate(currDate.getDate() + 1);\n        }\n\n        return workingDays;\n    }\n\n    static getCurrentDate() {\n        const currDate = new Date();\n        let dd = currDate.getDate();\n        let mm = currDate.getMonth() + 1;\n        const yyyy = currDate.getFullYear();\n\n        if (dd < 10) {\n            dd = '0'+dd;\n        }\n\n        if (mm < 10) {\n            mm = '0'+mm;\n        }\n\n        return mm+'-'+dd+'-'+yyyy;\n    }\n\n    static decodeProvidedHours(weekHours, step = 30) {\n        const result = { sun: null, mon: [], tue: [], wed: [], thu: [], fri: [], sat: null };\n\n        for (const [key, value] of Object.entries(weekHours)) {\n            if (value !== null && value !== 'null') {\n                //let hours = value;\n\n                let hours = typeof value == 'string' ? [value] : value;\nconsole.log(key, ': ', hours);\n                /* if(typeof value === 'string') {\n                    hours = value.split(',');\n                } */\n                result[key] = hours.map(item => {\n                    let auxTimes = item.split('-');\n                    let startAux = auxTimes[0].split(':');\n                    let start = Number(startAux[0]);\n                    let endAux = auxTimes[1].split(':');\n                    let end = Number(endAux[0]);\n\n                    return this.getWorkingHorus(step, start, end, false);\n                });\n                result[key] = [].concat.apply([], result[key]);\n            }\n        }\n\n        return result;\n    }\n\n    static getCurrentHour(strTimeZone) {\n        const isDST = this.isDST(new Date());\n        let timeZonesRegions = null;\n\n        // Array of key: UTM value, value: UTC value\n        if (isDST) {\n            timeZonesRegions = {\n                'GMT-0700': '-7',\n                'GMT-0600': '-6',\n                'GMT-0500': '-5',\n                'GMT-0400': '-4',\n                'GMT-0800': '-8',\n                'GMT-0900': '-9',\n            };\n        } else {\n            timeZonesRegions = {\n                'GMT-0800': '-8',\n                'GMT-0700': '-7',\n                'GMT-0600': '-6',\n                'GMT-0500': '-5',\n                'GMT-0900': '-9',\n                'GMT-1000': '-10',\n            };\n        }\n\n        const offset = timeZonesRegions[strTimeZone];\n\n        // 11/13/2020, 4:20:21 PM\n\n        const d = new Date();\n        const utc = d.getTime() + d.getTimezoneOffset() * 60000;\n        const nd = new Date(utc + 3600000 * offset);\n        const wholeStr = nd.toLocaleString();\n\n        const auxTimeArray = wholeStr.split(', ');\n        const justTimeStr = auxTimeArray[1];\n        const justTimeStrArray = justTimeStr.split(' ');\n        const section = justTimeStrArray[1];\n        const justTimeNumbers = justTimeStrArray[0];\n        const justTimeArray = justTimeNumbers.split(':');\n\n        return `${justTimeArray[0]}:${justTimeArray[1]} ${section}`;\n    }\n\n    static convertHourTo24Format(timeStr) {\n        const sectionArr = timeStr.split(' ');\n        const section = sectionArr[1];\n        const hourArr = timeStr.split(':');\n        const hour = parseInt(hourArr[0], 10);\n\n        return section === 'AM' || hour === 12 ? hour : hour + 12;\n    }\n\n    static changeDateFormat(dateStr) {\n        const separation = dateStr.replace(/-/g, '/');\n        const strDate = `${separation} 08:00:00`;\n        return new Date(strDate);\n    }\n\n    static getQueryStringValue(key) {\n        const searchParams = new URLSearchParams(window.location.search);\n        return searchParams.get(key);\n    }\n\n    // Guetting the browser current Time Zone, Ex.: GMT-0800 is PACIFIC time\n    static getTimeZoneStringValue() {\n        const cTz = new Date().toString().match(/([A-Z]+[+-][0-9]+)/)[1];\n        return cTz;\n    }\n\n    static isDST(d) {\n        const jan = new Date(d.getFullYear(), 0, 1).getTimezoneOffset();\n        const jul = new Date(d.getFullYear(), 6, 1).getTimezoneOffset();\n        return Math.max(jan, jul) !== d.getTimezoneOffset();\n    }\n\n    static getDiference(timeStr, selectedTimeZone) {\n        const arrF = timeStr.split(' ');\n        const arrH = arrF[0].split(':');\n        const mm = arrH[1];\n\n        const hour = this.convertHourTo24Format(timeStr);\n        const isDayLight = this.isDST(new Date());\n\n        // PACIFIC (3h of diference) default\n        let dif = 3;\n\n        // MOUNTAIN (2h of diference)\n        if ((isDayLight && selectedTimeZone === 'GMT-0600') || (!isDayLight && selectedTimeZone === 'GMT-0700')) {\n            dif = 2;\n        }\n\n        // CENTRAL (1h of diference)\n        if ((isDayLight && selectedTimeZone === 'GMT-0500') || (!isDayLight && selectedTimeZone === 'GMT-0600')) {\n            dif = 1;\n        }\n\n        // ALASKA (4h of diference)\n        if ((isDayLight && selectedTimeZone === 'GMT-0800') || (!isDayLight && selectedTimeZone === 'GMT-0900')) {\n            dif = 4;\n        }\n\n        // HAWAII (5h of diference)\n        if ((isDayLight && selectedTimeZone === 'GMT-0900') || (!isDayLight && selectedTimeZone === 'GMT-1000')) {\n            dif = 5;\n        }\n\n        const hourResult = hour + dif;\n        const section = hourResult >= 12 ? 'PM' : 'AM';\n        const result = hourResult > 12 ? hourResult - 12 : hourResult;\n\n        return `${result}:${mm} ${section}`;\n    }\n}\n","import React, { Component } from \"react\";\nimport { IconContext } from \"react-icons\";\nimport { FaCaretUp, FaCaretDown } from 'react-icons/fa';\nimport \"./select.css\";\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOpen: false,\n      selected: 0\n    };\n    this.close = this.close.bind(this);\n  }\n\n  componentDidUpdate() {\n    setTimeout(() => {\n      this.state.listOpen\n        ? window.addEventListener(\"click\", this.close)\n        : window.removeEventListener(\"click\", this.close);\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"click\", this.close);\n  }\n\n  close(timeOut) {\n    this.setState({ listOpen: false });\n  }\n\n  selectItem(id) {\n    this.setState( {listOpen: false}, this.props.onSelect(id, this.props.name) );\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }));\n  }\n\n  render() {\n    const { listOpen } = this.state;\n    const headerTitle = this.props.list.filter(item => item.selected)[0].title;\n\n    return (\n      <div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n          <div className=\"dd-header-title\">\n            <span>{headerTitle}</span>\n          </div>\n          {listOpen ? (\n            <IconContext.Provider value={{ className: \"selectIcon\" }}><FaCaretUp /></IconContext.Provider>\n          ) : (\n            <IconContext.Provider value={{ className: \"selectIcon\" }}><FaCaretDown /></IconContext.Provider>\n          )}\n        </div>\n        {listOpen && (\n          <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\n            {this.props.list.map(item => (\n              <li\n                className={\n                  item.selected ? \"dd-list-item selected\" : \"dd-list-item\"\n                }\n                key={item.id}\n                onClick={() => this.selectItem(item.id)}\n              >\n                <span>{item.title}</span>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport { useStates } from 'react-us-states';\nimport axios from 'axios';\nimport { IconContext } from 'react-icons';\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\n\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport IdleTimer from 'react-idle-timer';\n\nimport styled from 'styled-components';\nimport { workingDaysOfWeek, formData } from './data/WidgetData';\n\nimport Helpers from './utils/helpers';\nimport Dropdown from './components/select';\n\nconst CallBackContainer = styled.div`\n    .container {\n        background: ${(props) => props.styles.formBackgroundColor};\n        padding-top: 2.5rem;\n        -webkit-box-shadow: 0 3px 9px 0 rgba(0, 0, 0, 0.1);\n        -moz-box-shadow: 0 3px 9px 0 rgba(0, 0, 0, 0.1);\n        box-shadow: 0 3px 9px 0 rgba(0, 0, 0, 0.1);\n\n        max-width: 1140px;\n    }\n\n    .col-md-5 {\n        padding-right: 20px;\n        padding-left: 40px;\n    }\n    .col-md-7 {\n        padding-right: 40px;\n        padding-left: 25px;\n    }\n    .checkbox-wrapper {\n        padding-left: 47px;\n\n        label {\n            font-size: 14px;\n            padding-right: 35px;\n        }\n\n        input {\n            width: 17px;\n            height: 17px;\n            margin-top: 4px;\n            margin-left: -23px;\n            border: 1px solid ${(props) => props.styles.fieldsBorderColor};\n            border-radius: ${(props) => (props.styles.bordered ? '.25rem' : '0')};\n        }\n    }\n\n    input.form-control {\n        height: 50px;\n        border: 1px solid ${(props) => props.styles.fieldsBorderColor};\n        border-radius: ${(props) => (props.styles.bordered ? '.25rem' : '0')};\n    }\n\n    .dd-header {\n        border-radius: ${(props) => (props.styles.bordered ? '.25rem' : '0')};\n        border: 1px solid ${(props) => props.styles.fieldsBorderColor};\n    }\n\n    label {\n        font-size: 17px;\n        margin-bottom: 0;\n        color: ${(props) => props.styles.fontColor};\n    }\n\n    .timezone-label {\n        color: ${(props) => props.styles.calendarColorON};\n        float: right;\n        padding-right: 5px;\n\n        @media only screen and (min-width: 920px) and (max-width: 1024px) {\n            float: none;\n            display: block;\n        }\n\n        @media only screen and (max-width: 550px) {\n            float: none;\n            display: block;\n            padding-left: 15px;\n        }\n    }\n\n    button.btn {\n        color: ${(props) => props.styles.btnCTAFontColor};\n        background-color: ${(props) => props.styles.btnCTANormalColor};\n        border-color: ${(props) => props.styles.btnCTANormalColor};\n        border-radius: ${(props) => (props.styles.bordered ? '.25rem' : '0')};\n        margin: 20px 35px 50px;\n        padding: 15px 60px;\n        font-size: 19px;\n        font-weight: bold;\n        -webkit-box-shadow: 0 3px 9px 0 rgba(0, 0, 0, 0.1);\n        -moz-box-shadow: 0 3px 9px 0 rgba(0, 0, 0, 0.1);\n        box-shadow: 0 3px 9px 0 rgba(0, 0, 0, 0.1);\n\n        &:hover {\n            background-color: ${(props) => props.styles.btnCTAHoveredColor};\n            border-color: ${(props) => props.styles.btnCTAHoveredColor};\n        }\n\n        @media all and (max-width: 768px) {\n            margin: 25px;\n            padding: 15px 45px;\n        }\n    }\n\n    small.text-muted {\n        color: #bd2130 !important;\n        font-size: 90%;\n    }\n\n    @media all and (max-width: 767px) {\n        .col-md-5 {\n            padding-left: 15px;\n        }\n        .col-md-7 {\n            padding-right: 15px;\n        }\n\n        .checkbox-wrapper {\n            padding-left: 25px;\n\n            label {\n                padding-right: 0;\n            }\n        }\n    }\n\n    @media all and (max-width: 550px) {\n        .cus-calendar-wrapper {\n            padding: 0;\n        }\n\n        .date-time-label {\n            padding-left: 15px;\n        }\n    }\n`;\n\nconst CallbackCalendarWrapper = styled.div`\n    background: #ffffff;\n    padding: 20px 15px;\n\n    @media all and (max-width: 550px) {\n        padding: 33px 15px 20px;\n    }\n\n    border-radius: ${(props) => (props.bordered ? '4px' : '0')};\n\n    -webkit-box-shadow: 0 3px 9px 0 rgba(0, 0, 0, 0.1);\n    -moz-box-shadow: 0 3px 9px 0 rgba(0, 0, 0, 0.1);\n    box-shadow: 0 3px 9px 0 rgba(0, 0, 0, 0.1);\n\n    .arrow {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        z-index: 9999;\n    }\n    .arrow span {\n        opacity: 0;\n        width: 20px;\n        height: 20px;\n        margin: -7px;\n        display: block;\n        transform: rotate(45deg);\n        border-bottom: 5px solid ${(props) => props.arrowColor};\n        border-right: 5px solid ${(props) => props.arrowColor};\n        animation: animate 2s 4;\n    }\n    .arrow span:nth-child(2) {\n        -webkit-animation-delay: -0.2s;\n        animation-delay: -0.2s;\n    }\n    .arrow span:nth-child(3) {\n        -webkit-animation-delay: -0.4s;\n        animation-delay: -0.4s;\n    }\n    @-webkit-keyframes animate {\n        0% {\n            opacity: 0;\n            transform: rotate(45deg) translate(-20px, -20px);\n        }\n        50% {\n            opacity: 1;\n        }\n        100% {\n            opacity: 0;\n            transform: rotate(45deg) translate(20px, 20px);\n        }\n    }\n    @keyframes animate {\n        0% {\n            opacity: 0;\n            transform: rotate(45deg) translate(-20px, -20px);\n        }\n        50% {\n            opacity: 1;\n        }\n        100% {\n            opacity: 0;\n            transform: rotate(45deg) translate(20px, 20px);\n        }\n    }\n`;\n\nconst CallBackCalendar = styled.div`\n    height: 470px;\n    overflow: auto;\n\n    h3 {\n        margin: 5px 0;\n        color: ${(props) => props.styles.fontColor}; /* #013c73 */\n        font-size: 15px;\n        font-weight: 600;\n        text-align: center;\n        text-transform: uppercase;\n    }\n\n    p {\n        margin: 0;\n        color: #666666;\n        font-size: 17px;\n        font-weight: 700;\n        text-align: center;\n    }\n\n    ul {\n        margin: 0;\n        padding: 0;\n        li {\n            list-style: none;\n        }\n    }\n\n    .btnDay {\n        padding: 0;\n        width: 150px;\n        height: 50px;\n        color: #ffffff;\n        cursor: pointer;\n        font-size: 13px;\n        border-radius: 0;\n        font-weight: bold;\n        border: 1px solid ${(props) => props.styles.calendarColorLines};\n        transition: all 0.3s ease-out 0s;\n\n        &.btnOFF {\n            background-color: ${(props) => props.styles.calendarColorOFF};\n            cursor: unset;\n        }\n        &.btnON {\n            background-color: ${(props) => props.styles.calendarColorON};\n            &:hover {\n                background-color: ${(props) => props.styles.calendarColorHOVER};\n                transition: all 0.3s ease-out 0s;\n            }\n        }\n        &.btnACTIVE {\n            background-color: ${(props) => props.styles.calendarColorACTIVE};\n        }\n    }\n\n    .BrainhubCarousel__customArrows {\n        position: absolute;\n        top: 32px;\n        z-index: 9999;\n        cursor: pointer;\n        pointer-events: auto;\n\n        .carouselIcons {\n            width: 30px;\n            height: 30px;\n        }\n        .carouselIcons {\n            color: ${(props) => props.styles.calendarColorACTIVE};\n        }\n\n        &.BrainhubCarousel__arrow--disable {\n            cursor: not-allowed;\n\n            .carouselIcons {\n                color: #939393;\n            }\n        }\n\n        &.BrainhubCarousel__custom-arrowLeft {\n            left: 25px;\n            @media all and (max-width: 768px) {\n                left: 10px;\n            }\n        }\n\n        &.BrainhubCarousel__custom-arrowRight {\n            right: 40px;\n\n            @media all and (max-width: 768px) {\n                right: 15px;\n            }\n        }\n\n        @media only screen and (min-width: 920px) and (max-width: 1024px) {\n            top: 65px;\n        }\n\n        @media only screen and (max-width: 550px) {\n            top: 65px;\n        }\n    }\n\n    .form-error {\n        color: red;\n        font-size: 15px;\n    }\n`;\n\nclass App extends Component {\n    constructor() {\n        super();\n        const isDST = Helpers.isDST(new Date());\n        this.state = {\n            pageUrl: Helpers.getUrlParameter('pageUrl'),\n            pageDomain: Helpers.getUrlParameter('pageDomain'),\n            ip_address: Helpers.getUrlParameter('ip_address'),\n            token: Helpers.getUrlParameter('token'),\n            source: Helpers.getUrlParameter('source'),\n            company: Helpers.getUrlParameter('company') || 'Consolidated Credit',\n            lang: Helpers.getUrlParameter('language') || 'EN',\n            pidinfo: Helpers.getUrlParameter('pidinfo') || '',\n            drops_campaign_id: Helpers.getUrlParameter('drops_campaign_id') || '',\n            workHours: Helpers.getUrlParameter('timeLaps') ? Helpers.getWorkingHorus(Number(Helpers.getUrlParameter('timeLaps')), 8, 18, false) : Helpers.getWorkingHorus(15, 8, 18, false),\n            workDays: Helpers.getUrlParameter('numberOfDays') ? Helpers.getWorkingDays(Helpers.getUrlParameter('numberOfDays')) : Helpers.getWorkingDays(20),\n            daysOff: Helpers.getUrlParameter('daysOff') ? JSON.parse(Helpers.getUrlParameter('daysOff')) : ['09-24-2020', '10-19-2020', '10-23-2020', '10-30-2020'],\n            timeOff: Helpers.decodeProvidedHours(\n                {\n                    sun: (Helpers.getUrlParameter('sun') !== false && Helpers.getUrlParameter('sun') !== 'null') ? JSON.parse(Helpers.getUrlParameter('sun')) : null,\n                    mon: (Helpers.getUrlParameter('mon') !== false && Helpers.getUrlParameter('mon') !== \"null\") ? JSON.parse(Helpers.getUrlParameter('mon')) : ['9:00-17:00'],\n                    tue: (Helpers.getUrlParameter('tue') !== false && Helpers.getUrlParameter('tue') !== \"null\") ? JSON.parse(Helpers.getUrlParameter('tue')) : ['8:00-16:00'],\n                    wed: (Helpers.getUrlParameter('wed') !== false && Helpers.getUrlParameter('wed') !== \"null\") ? JSON.parse(Helpers.getUrlParameter('wed')) : ['8:00-12:00', '13:00-16:00'],\n                    thu: (Helpers.getUrlParameter('thu') !== false && Helpers.getUrlParameter('thu') !== \"null\") ? JSON.parse(Helpers.getUrlParameter('thu')) : ['9:00-17:00'],\n                    fri: (Helpers.getUrlParameter('fri') !== false && Helpers.getUrlParameter('fri') !== \"null\") ? JSON.parse(Helpers.getUrlParameter('fri')) : ['8:00-11:30', '13:00-17:30'],\n                    sat: (Helpers.getUrlParameter('sat') !== false && Helpers.getUrlParameter('sat') !== 'null') ? JSON.parse(Helpers.getUrlParameter('sat')) : null,\n                },\n                Helpers.getUrlParameter('timeLaps') ? Number(Helpers.getUrlParameter('timeLaps')) : 15\n            ),\n            calendarAvailability: [],\n            selectedDate: null,\n            usaStates: [\n                {\n                    id: 'none',\n                    title: Helpers.getUrlParameter('language') && Helpers.getUrlParameter('language') === 'ES' ? 'Seleccione su Estado' : 'Select your state',\n                    selected: true,\n                },\n            ],\n            selectedState: null,\n            usaTimeZones: [\n                {\n                    id: isDST ? 'GMT-0700' : 'GMT-0800',\n                    title: 'PACIFIC',\n                    selected: true,\n                },\n                {\n                    id: isDST ? 'GMT-0600' : 'GMT-0700',\n                    title: 'MOUNTAIN',\n                    selected: false,\n                },\n                {\n                    id: isDST ? 'GMT-0500' : 'GMT-0600',\n                    title: 'CENTRAL',\n                    selected: false,\n                },\n                {\n                    id: isDST ? 'GMT-0400' : 'GMT-0500',\n                    title: 'EASTERN',\n                    selected: false,\n                },\n                {\n                    id: isDST ? 'GMT-0800' : 'GMT-0900',\n                    title: 'ALASKA',\n                    selected: false,\n                },\n                {\n                    id: isDST ? 'GMT-0900' : 'GMT-1000',\n                    title: 'HAWAII',\n                    selected: false,\n                },\n            ],\n            selectedTimeZone: Helpers.getTimeZoneStringValue(),\n            firstname: Helpers.getUrlParameter('firstname') || '',\n            lastname: Helpers.getUrlParameter('lastname') || '',\n            phone: Helpers.getUrlParameter('phone') || '',\n            email: Helpers.getUrlParameter('email') || '',\n            nameError: false,\n            lastnameError: false,\n            phoneError: false,\n            emailError: false,\n            timeout: 600000, // Defining default idle time to refresh the calendar component (10 minutes)\n            isTimedOut: false,\n            tcpa: false,\n            twocolumn: Helpers.getUrlParameter('twocolumn') === 'true' || false,\n            formSent: false,\n            styles: {\n                bordered: Helpers.getUrlParameter('bordered') === 'true' || false,\n                formBackgroundColor: Helpers.getUrlParameter('formBackgroundColor') ? `#${Helpers.getUrlParameter('formBackgroundColor')}` : '#f6f6f6', // '#cfeffa'\n                fontColor: Helpers.getUrlParameter('fontColor') ? `#${Helpers.getUrlParameter('fontColor')}` : '#555555', // '#013C73',\n                calendarColorHOVER: Helpers.getUrlParameter('calendarColorHOVER') ? `#${Helpers.getUrlParameter('calendarColorHOVER')}` : '#246f87', // '#4cc6f4',\n                calendarColorON: Helpers.getUrlParameter('calendarColorON') ? `#${Helpers.getUrlParameter('calendarColorON')}` : '#2F90AF', // '#287DAD',\n                calendarColorOFF: Helpers.getUrlParameter('calendarColorOFF') ? `#${Helpers.getUrlParameter('calendarColorOFF')}` : '#E8E8E8', // '#939393',\n                calendarColorACTIVE: Helpers.getUrlParameter('calendarColorACTIVE') ? `#${Helpers.getUrlParameter('calendarColorACTIVE')}` : '#e61b17', // '#E8730F',\n                calendarColorLines: Helpers.getUrlParameter('calendarColorLines') ? `#${Helpers.getUrlParameter('calendarColorLines')}` : '#ffffff',\n                btnCTANormalColor: Helpers.getUrlParameter('btnCTANormalColor') ? `#${Helpers.getUrlParameter('btnCTANormalColor')}` : '#527E3E', // '#E8730F',\n                btnCTAHoveredColor: Helpers.getUrlParameter('btnCTAHoveredColor') ? `#${Helpers.getUrlParameter('btnCTAHoveredColor')}` : '#6c9b57', // '#287DAD',\n                btnCTAFontColor: Helpers.getUrlParameter('btnCTAFontColor') ? `#${Helpers.getUrlParameter('btnCTAFontColor')}` : '#ffffff',\n                fieldsBorderColor: Helpers.getUrlParameter('fieldsBorderColor') ? `#${Helpers.getUrlParameter('fieldsBorderColor')}` : '#26748b', // '#CED6DD',\n            },\n        };\n\n        this.idleTimer = null;\n        this.onAction = this.onAction.bind(this);\n        this.onActive = this.onActive.bind(this);\n        this.onIdle = this.onIdle.bind(this);\n    }\n\n    componentDidMount() {\n        this.fillingOutStateAvailability();\n        // Guetting the browser current Time Zone, Ex.: GMT-0800 is PACIFIC time\n        const cTz = new Date().toString().match(/([A-Z]+[+-][0-9]+)/)[1];\n        /* const auxCTZ = {\n            'GMT-0800': 'GMT-0700',\n            'GMT-0700': 'GMT-0600',\n            'GMT-0600': 'GMT-0500',\n            'GMT-0500': 'GMT-0400',\n            'GMT-0900': 'GMT-0800',\n            'GMT-1000': 'GMT-0900',\n        }; */\n\n        this.setState((state) => {\n            const usaTimeZones = state.usaTimeZones.map((item) => {\n                const auxItem = item;\n                // if (auxItem.id === auxCTZ[cTz]) {\n                if (auxItem.id === cTz) {\n                    auxItem.selected = true;\n                } else {\n                    auxItem.selected = false;\n                }\n\n                return auxItem;\n            });\n\n            return {\n                usaTimeZones,\n            };\n        });\n    }\n\n    onAction() {\n        // user did something\n        this.setState({ isTimedOut: false });\n    }\n\n    onActive() {\n        // user is active\n        this.setState({ isTimedOut: false });\n    }\n\n    onIdle() {\n        // user is idle\n        const { isTimedOut } = this.state;\n        if (isTimedOut) {\n            // do something\n        } else {\n            // implementing the reload\n            this.fillingOutStateAvailability();\n\n            this.idleTimer.reset();\n            this.setState({ isTimedOut: true });\n        }\n    }\n\n    handleCalendarClick = (day, hourTitle, hourID) => {\n        const { calendarAvailability } = this.state;\n        const auxAvailability = [...calendarAvailability];\n        let flag = 0;\n\n        for (let i = 0; i < auxAvailability.length; i += 1) {\n            if (auxAvailability[i].ID === day) {\n                for (let j = 0; j < auxAvailability[i].hours.length; j += 1) {\n                    if (auxAvailability[i].hours[j].title === hourTitle) {\n                        auxAvailability[i].hours[j].status = auxAvailability[i].hours[j].status === 'ACTIVE' ? 'ON' : 'ACTIVE';\n\n                        if (auxAvailability[i].hours[j].status === 'ACTIVE') {\n                            flag = 1;\n                        }\n                    } else {\n                        auxAvailability[i].hours[j].status = auxAvailability[i].hours[j].status === 'OFF' ? 'OFF' : 'ON';\n                    }\n                }\n            } else {\n                for (let j = 0; j < auxAvailability[i].hours.length; j += 1) {\n                    auxAvailability[i].hours[j].status = auxAvailability[i].hours[j].status === 'OFF' ? 'OFF' : 'ON';\n                }\n            }\n        }\n\n        let selected = '';\n        if (flag === 1) {\n            selected = hourID;\n        }\n        this.setState({ selectedDate: selected, calendarAvailability: auxAvailability });\n    };\n\n    handleSelectState = (value, name) => {\n        // Updating List of States\n        // let auxStates = [...this.state.usaStates];\n\n        this.setState((previousState) => ({\n            // now we'll use cached value\n            usaStates: previousState.usaStates.map((item) =>\n                item.id === value ? Object.assign(item, { selected: true }) : Object.assign(item, { selected: false })\n            ),\n        }));\n\n        this.setState({ [name]: value });\n\n        // Getting the ID of Time Zone region that the browser has currently\n        /* const cTz = Helpers.getTimeZoneRegion(value);\n        this.setState((state) => {\n            const usaTimeZones = state.usaTimeZones.map((item) => {\n                const auxItem = item;\n                if (auxItem.id === cTz) {\n                    auxItem.selected = true;\n                } else {\n                    auxItem.selected = false;\n                }\n\n                return auxItem;\n            });\n\n            return {\n                usaTimeZones,\n            };\n        }); */\n    };\n\n    handleTimeZoneSelect = (value, name) => {\n        this.setState((previousState) => ({\n            usaTimeZones: previousState.usaTimeZones.map((item) =>\n                item.id === value ? Object.assign(item, { selected: true }) : Object.assign(item, { selected: false })\n            ),\n        }));\n\n        this.setState({ [name]: value }, () => this.fillingOutStateAvailability());\n    };\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n\n        switch (name) {\n            case 'phone':\n                if (/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/.test(value)) {\n                    this.setState({ [name]: value, [`${name}Error`]: false });\n                } else {\n                    this.setState({ [`${name}Error`]: true });\n                }\n                break;\n            case 'email':\n                // eslint-disable-next-line no-case-declarations\n                const mailFormat = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                if (mailFormat.test(value.toLowerCase())) {\n                    this.setState({ [name]: value, [`${name}Error`]: false });\n                } else {\n                    this.setState({ [`${name}Error`]: true });\n                }\n                break;\n            default:\n                if (/[a-zA-Z]+/g.test(value) || value === '') {\n                    if (/\\d/g.test(value) === false) {\n                        this.setState({ [name]: value, [`${name}Error`]: false });\n                    } else {\n                        this.setState({ [`${name}Error`]: true });\n                    }\n                } else {\n                    this.setState({ [`${name}Error`]: true });\n                }\n                break;\n        }\n\n        this.setState({ [name]: value });\n    };\n\n    handleFormSubmit = () => {\n        const isDST = Helpers.isDST(new Date());\n        const {\n            pageUrl,\n            pidinfo,\n            drops_campaign_id,\n            firstname,\n            lastname,\n            phone,\n            email,\n            selectedDate,\n            selectedTimeZone,\n            tcpa,\n        } = this.state;\n\n        // EASTERN\n        let request_time = '';\n        if ((isDST && selectedTimeZone === 'GMT-0400') || (!isDST && selectedTimeZone === 'GMT-0500')) {\n            const estDate = new Date(selectedDate);\n            request_time = estDate.getTime();\n        } else {\n            console.log('Selected date str: ', selectedDate);\n\n            const hourArr = selectedDate.split(' ');\n            const timeStr = `${hourArr[1]} ${hourArr[2]}`;\n\n            const hourDif = Helpers.getDiference(timeStr, selectedTimeZone);\n            const estDate = `${hourArr[0]} ${hourDif}`;\n            request_time = new Date(estDate).getTime();\n\n            console.log('Result of Diference: ', estDate);\n            console.log('Result of Diference Timestamp: ', request_time);\n\n            /* const current_tz = Helpers.getTimeZoneStringValue();\n            const dateToConvert = new Date(`${selectedDate} ${current_tz}`).getTime();\n            let result = 0;\n            if ((isDST && selectedTimeZone === 'GMT-0700') || (!isDST && selectedTimeZone === 'GMT-0800')) {\n                result = dateToConvert + 10800;\n            }\n\n            console.log('Time Stamp: ', result);\n            console.log('Posible Date: ', new Date(result).toLocaleString('en-US', { timeZone: 'America/New_York' })); */\n        }\n\n        // Old CURL https://drops-api.debt.com/lead?apikey=R0d0NjVLS08hISEvPz80NDExMjU0OHVVSkhKaGdkd1BPPExt\n        // New CURL https://drops-dashboard-bk.debt.com/api/v1/lead?apikey=3SBqDxOk7UMUeIhhvZ2lmdJ1qvSaImrA\n        axios\n            .post(\n                'https://drops-dashboard-bk.debt.com/api/v1/lead?apikey=3SBqDxOk7UMUeIhhvZ2lmdJ1qvSaImrA',\n                {\n                    referrer_url: pageUrl,\n                    name: firstname,\n                    last_name: lastname,\n                    phone,\n                    mapi_lead_id: 'AB123',\n                    pid: pidinfo,\n                    CakeID: 'TETEGVEVE',\n                    email,\n                    drops_campaign_id,\n                    tcpa,\n                    request_time,\n                    time_zone: selectedTimeZone,\n                },\n                {\n                    headers: {\n                        Authorization: 'Api-Key 3SBqDxOk7UMUeIhhvZ2lmdJ1qvSaImrA',\n                    },\n                }\n            )\n            .then((res) => {\n                if (res.status === 200) {\n                    this.setState({ formSent: true });\n                } else {\n                    console.log(res);\n                }\n            });\n    };\n\n    handleCheckboxCchange = (evt) => {\n        this.setState({ tcpa: evt.target.checked });\n    };\n\n    getTimeZoneLabel = () => {\n        const { lang, selectedTimeZone, usaTimeZones } = this.state;\n        /* const timeZonesRegions = {\n            'GMT-0700': 'PACIFIC',\n            'GMT-0600': 'MOUNTAIN',\n            'GMT-0500': 'CENTRAL',\n            'GMT-0400': 'EASTERN',\n            'GMT-0800': 'ALASKA',\n            'GMT-0900': 'HAWAII',\n        }; */\n\n        const region = usaTimeZones.filter((item) => item.id === selectedTimeZone)[0].title;\n        return lang === 'EN' ? `*Showing ${region} times` : `Mostrando tiempos en ${region}`;\n    };\n\n    fillingOutStateAvailability() {\n        const { workDays, workHours, daysOff, timeOff, selectedTimeZone } = this.state;\n        console.log('Original TimeOff: ', Helpers.getUrlParameter('wed'));\n        console.log('Parsed TimeOff: ', JSON.parse(Helpers.getUrlParameter('wed')));\n\n        console.log('Conbined: ', timeOff);\n\n        // Filling the array of availability (calendarAvailability)\n        const auxAvailabilityArray = [];\n\n        // Filter by today day and current hour running (All hours before current must be OFF). Current hours depending on the Time Zone Selected\n        const currentDate = Helpers.getCurrentDate();\n        const currentTime = Helpers.getCurrentHour(selectedTimeZone);\n\n        // Current Hour depending on Time Zone selected or default browser Time Zone when page loads\n        // 9:43 AM\n        const chour = Helpers.convertHourTo24Format(currentTime);\n\n        let isOff = false;\n        for (let i = 0; i < workDays.length; i += 1) {\n            const day = {\n                ID: workDays[i],\n                hours: [],\n            };\n            // 1- Set days as Off from the given array (daysOff)\n            isOff = daysOff.includes(workDays[i]);\n\n            for (let j = 0; j < workHours.length; j += 1) {\n                const hourData = {\n                    ID: `${workDays[i]} ${workHours[j]}`, // Ex.: '09-24-2020 9:00AM'\n                    title: workHours.length === j + 1 ? workHours[j] : `${workHours[j]} - ${workHours[j + 1]}`, // Ex.: '9:00AM'\n                    status: 'ON', // Possible values: ['ON', 'OFF', 'ACTIVE']\n                };\n\n                // 2- Set hours Off depending on the given arrays\n                if (isOff) {\n                    hourData.status = 'OFF';\n                } else {\n                    // Getting short version of day title (SUN, MON,...,SAT)\n\n                    const workDayDate = Helpers.changeDateFormat(workDays[i]);\n                    const dayTitle = workingDaysOfWeek.EN[Number(workDayDate.getDay())];\n\n                    // Getting the given hours available for i day\n                    const dayHours = timeOff[dayTitle];\n\n                    // This will returns true if the array of hours provided contains the current j hour, and false if not.\n                    if (dayHours == null || !dayHours.includes(workHours[j])) {\n                        hourData.status = 'OFF';\n                    }\n\n                    // Set status OFF: IF workDays[i] === today and the current time is < workHours[j]\n                    if (currentDate === workDays[i]) {\n                        const jhour = Helpers.convertHourTo24Format(workHours[j]);\n\n                        if (chour + 3 >= jhour) {\n                            hourData.status = 'OFF';\n                        }\n                    }\n                }\n\n                // Adding each hour info to the day\n                day.hours[j] = hourData;\n            }\n\n            // Adding each day to the availability array\n            auxAvailabilityArray[i] = day;\n        }\n\n        // Initializing the states list\n        const states = useStates();\n        const { usaStates } = this.state;\n        const list = [...usaStates];\n\n        states.map((item) =>\n            list.push({\n                id: item.abbreviation,\n                title: `${item.abbreviation} | ${item.name}`,\n                selected: false,\n            })\n        );\n\n        this.setState({ calendarAvailability: auxAvailabilityArray, usaStates: list, selectedDate: null });\n    }\n\n    render() {\n        const {\n            company,\n            lang,\n            firstname,\n            nameError,\n            lastname,\n            lastnameError,\n            phone,\n            phoneError,\n            email,\n            emailError,\n            tcpa,\n            usaStates,\n            selectedState,\n            usaTimeZones,\n            selectedDate,\n            twocolumn,\n            styles,\n            calendarAvailability,\n            formSent,\n        } = this.state;\n\n        return (\n            <CallBackContainer styles={styles}>\n                <Container style={{display: formSent ? 'none' : 'block' }}>\n                    <Row>\n                        <Col xs={12} sm={12} md={twocolumn ? 5 : 12}>\n                            <Form id='apptScheduler'>\n                                <Form.Group controlId=\"formName\">\n                                    <Form.Label>{formData.label[lang].name}:</Form.Label>\n                                    <Form.Control\n                                        name=\"firstname\"\n                                        type=\"text\"\n                                        value={firstname}\n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Text className=\"text-muted\">\n                                        {nameError && formData.inputsError[lang].name}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formLastName\">\n                                    <Form.Label>{formData.label[lang].lastname}:</Form.Label>\n                                    <Form.Control\n                                        name=\"lastname\"\n                                        type=\"text\"\n                                        value={lastname}\n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Text className=\"text-muted\">\n                                        { lastnameError && formData.inputsError[lang].lastname}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formPhoneNumber\">\n                                    <Form.Label>{formData.label[lang].phone}:</Form.Label>\n                                    <Form.Control name=\"phone\" type=\"text\" value={phone} onChange={this.handleChange}/>\n                                    <Form.Text className=\"text-muted\">\n                                        { phoneError && formData.inputsError[lang].phone}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formEmail\">\n                                    <Form.Label>{formData.label[lang].email}:</Form.Label>\n                                    <Form.Control name=\"email\" type=\"email\" value={email} onChange={this.handleChange}/>\n                                    <Form.Text className=\"text-muted\">\n                                        { emailError && formData.inputsError[lang].email}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formState\">\n                                    <Form.Label>{formData.label[lang].state}:</Form.Label>\n\n                                    <Dropdown id=\"formState\" name=\"selectedState\" list={usaStates} onSelect={this.handleSelectState}/>\n\n                                    <Form.Text className=\"text-muted\">\n                                        {selectedState === 'none' && formData.inputsError[lang].state}\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formTimeZone\">\n                                    <Form.Label>{formData.label[lang].timezone}:</Form.Label>\n                                    <Dropdown id=\"formTimeZone\" name=\"selectedTimeZone\" list={usaTimeZones} onSelect={this.handleTimeZoneSelect}/>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col xs={12} sm={12} md={twocolumn ? 7 : 12} className=\"cus-calendar-wrapper\">\n                            <IdleTimer\n                                ref={(ref) => this.idleTimer = ref }\n                                element={document}\n                                onActive={this.onActive}\n                                onIdle={this.onIdle}\n                                onAction={this.onAction}\n                                debounce={250}\n                                timeout={this.state.timeout}\n                            />\n                            <Form.Label className=\"date-time-label\">{formData.label[lang].calendar}:</Form.Label>\n                            <Form.Label className='timezone-label'>{this.getTimeZoneLabel()}</Form.Label>\n\n                            <CallbackCalendarWrapper bordered={styles.bordered} arrowColor={styles.calendarColorACTIVE}>\n                                <div className=\"arrow\">\n                                    <span/>\n                                    <span/>\n                                    <span/>\n                                </div>\n\n                                <CallBackCalendar styles={styles}>\n                                    <Carousel\n                                        itemWidth={150}\n                                        slidesPerPage={4}\n                                        addArrowClickHandler\n                                        arrowLeft={<IconContext.Provider value={{ className: \"carouselIcons\" }}><FaCaretLeft /></IconContext.Provider>}\n                                        arrowRight={<IconContext.Provider value={{ className: \"carouselIcons\" }}><FaCaretRight /></IconContext.Provider>}\n                                    >\n                                    {\n                                        calendarAvailability.map(day => {\n                                            var hTitle = Helpers.changeDateFormat( day.ID );\n                                            return (\n                                                <div key={day.ID} className=\"dayContainer\" >\n                                                    <h3>{ workingDaysOfWeek[lang][hTitle.getDay()] }</h3>\n                                                    <p>{ day.ID }</p>\n                                                    <ul>\n                                                        {day.hours.map(hour =>\n                                                            <li key={hour.ID}>\n                                                                <button\n                                                                    className={`btnDay ${hour.status === 'OFF' ? 'btnOFF' : hour.status === 'ACTIVE' ? 'btnACTIVE' : 'btnON'}`}\n                                                                    onClick={() => this.handleCalendarClick( day.ID, hour.title, hour.ID )}\n                                                                    disabled={hour.status === 'OFF'}\n                                                                >\n                                                                    {hour.status !== 'OFF' ? hour.title : <span>&nbsp;</span>}\n                                                                </button>\n                                                            </li>\n                                                        )}\n                                                    </ul>\n                                                </div>\n                                            );\n                                        })\n                                    }\n                                    </Carousel>\n                                </CallBackCalendar>\n                            </CallbackCalendarWrapper>\n                            <Form.Text className=\"text-muted\">\n                                {selectedDate === '' && formData.inputsError[lang].calendar}\n                            </Form.Text>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"mt-3 checkbox-wrapper\">\n                            <Form.Check\n                                id=\"tcpa\"\n                                type=\"checkbox\"\n                                label={lang === 'EN' ? `By clicking on the Submit and requesting a call back, you acknowledge and agree that you are providing express written consent that ${company} or its affiliated service providers to contact you at the phone number provided above by telephone, Text messages, SMS, MMS, as well as through an auto dialer and prerecorded messages, even if your telephone number is currently listed on any internal, corporate, state or federal Do-Not-Call list. You may unsubscribe at any time by responding as directed in the text message. If you choose not to consent, please do not proceed to click submit. Consent is not required as a condition to utilize ${company} services and you are under no obligation to purchase anything.` : `Al hacer clic en Enviar y solicitar una devolución de llamada, usted reconoce y acepta que está proporcionando un consentimiento expreso por escrito para que ${company} o sus proveedores de servicios afiliados se comuniquen con usted al número de teléfono proporcionado anteriormente, por teléfono, mensajes de texto, SMS, MMS, así como a través de un marcador automático y mensajes pregrabados, incluso si su número de teléfono figura actualmente en alguna lista interna, corporativa, estatal o federal de No llamar. Puede darse de baja en cualquier momento respondiendo como se indica en el mensaje de texto. Si elige no dar su consentimiento, no haga clic en enviar. No se requiere el consentimiento como condición para utilizar los servicios de ${company} y no tiene la obligación de comprar nada.`}\n                                checked={tcpa}\n                                onChange={this.handleCheckboxCchange}\n                            />\n                        </Col>\n                    </Row>\n                    {!tcpa && (\n                        <Row>\n                            <Col className=\"checkbox-wrapper\">\n                                <small className=\"text-muted form-text pl-4\">{formData.inputsError[lang].tcpa}</small>\n                            </Col>\n                        </Row>\n                    )}\n                    <Row>\n                        <Col style={{textAlign: 'center'}}>\n                            <Button\n                                variant=\"primary\"\n                                type=\"submit\"\n                                disabled={ firstname === '' || nameError || lastname === '' || lastnameError || phone === '' || phoneError || email === '' || emailError || selectedDate === \"\" || selectedDate === null || selectedState === null || selectedState === 'none' || !tcpa}\n                                onClick={this.handleFormSubmit}\n                            >\n                                {formData.cta[lang].btnTitle}\n                            </Button>\n                        </Col>\n                    </Row>\n                </Container>\n                <Container style={{display: !formSent ? 'none' : 'block' }}>\n                    <Row style={{padding: 30}}>\n                        <Col>\n                            <h3>{`${formData.label[lang].thankyoutitle} ${firstname}!`}</h3>\n                            <p>{`${formData.label[lang].thankyoumesage} ${phone} ${lang === 'EN' ? 'on' : 'el'} ${selectedDate}. ${formData.label[lang].thankyoumesage2}`}</p>\n                        </Col>\n                    </Row>\n                </Container>\n            </CallBackContainer>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}